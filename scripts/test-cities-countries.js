// –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å –≥–æ—Ä–æ–¥–∞–º–∏ –∏ —Å—Ç—Ä–∞–Ω–∞–º–∏
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://ewkeuupfristqqonkcph.supabase.co'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImV3a2V1dXBmcmlzdHFxb25rY3BoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg4NDI0MDQsImV4cCI6MjA3NDQxODQwNH0.YduF49boh1jK40-Lk1nbie9JVtF0AsPyn_08JC-HX6E'

const supabase = createClient(supabaseUrl, supabaseKey)

async function testCitiesAndCountries() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å –≥–æ—Ä–æ–¥–∞–º–∏ –∏ —Å—Ç—Ä–∞–Ω–∞–º–∏...')
    
    // 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω
    console.log('\nüåç –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω...')
    const { data: countries, error: countriesError } = await supabase
      .from('countries')
      .select('*')
      .order('name')

    if (countriesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω:', countriesError)
      return
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–∞–Ω: ${countries.length}`)
    countries.forEach(country => {
      console.log(`  - ${country.name} (${country.code})`)
    })

    if (countries.length === 0) {
      console.log('‚ö†Ô∏è –ù–µ—Ç —Å—Ç—Ä–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
      return
    }

    // 2. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤
    console.log('\nüèôÔ∏è –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤...')
    const { data: cities, error: citiesError } = await supabase
      .from('cities')
      .select(`
        *,
        country:countries(*)
      `)
      .order('name')

    if (citiesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≥–æ—Ä–æ–¥–æ–≤:', citiesError)
      return
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –≥–æ—Ä–æ–¥–æ–≤: ${cities.length}`)
    cities.forEach(city => {
      console.log(`  - ${city.name}${city.country ? ` (${city.country.name})` : ' (–±–µ–∑ —Å—Ç—Ä–∞–Ω—ã)'}`)
    })

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ —Å—Ç—Ä–∞–Ω–µ
    console.log('\n‚ûï –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ —Å—Ç—Ä–∞–Ω–µ...')
    const firstCountry = countries[0]
    
    const testCity = {
      name: `–¢–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥ ${Date.now()}`,
      country_id: firstCountry.id,
      active: true
    }

    console.log('üìù –°–æ–∑–¥–∞–µ–º –≥–æ—Ä–æ–¥:', testCity)

    const { data: newCity, error: createError } = await supabase
      .from('cities')
      .insert(testCity)
      .select(`
        *,
        country:countries(*)
      `)
      .single()

    if (createError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞:', createError)
    } else {
      console.log('‚úÖ –ì–æ—Ä–æ–¥ —Å–æ–∑–¥–∞–Ω:', {
        name: newCity.name,
        country: newCity.country?.name || '–±–µ–∑ —Å—Ç—Ä–∞–Ω—ã'
      })

      // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ (—Å–º–µ–Ω–∞ —Å—Ç—Ä–∞–Ω—ã)
      console.log('\n‚úèÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ (—Å–º–µ–Ω–∞ —Å—Ç—Ä–∞–Ω—ã)...')
      
      const secondCountry = countries[1] || countries[0]
      
      const { data: updatedCity, error: updateError } = await supabase
        .from('cities')
        .update({ country_id: secondCountry.id })
        .eq('id', newCity.id)
        .select(`
          *,
          country:countries(*)
        `)
        .single()

      if (updateError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞:', updateError)
      } else {
        console.log('‚úÖ –ì–æ—Ä–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω:', {
          name: updatedCity.name,
          oldCountry: firstCountry.name,
          newCountry: updatedCity.country?.name || '–±–µ–∑ —Å—Ç—Ä–∞–Ω—ã'
        })
      }

      // 5. –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥
      console.log('\nüóëÔ∏è –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥...')
      const { error: deleteError } = await supabase
        .from('cities')
        .delete()
        .eq('id', newCity.id)

      if (deleteError) {
        console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≥–æ—Ä–æ–¥–∞:', deleteError)
      } else {
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –≥–æ—Ä–æ–¥ —É–¥–∞–ª–µ–Ω')
      }
    }

  } catch (error) {
    console.error('üí• –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error)
  }
}

testCitiesAndCountries()





