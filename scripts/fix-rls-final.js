import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.VITE_SUPABASE_URL
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY

const supabase = createClient(supabaseUrl, supabaseKey)

async function fixRLS() {
  console.log('üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º RLS...')
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    const { data: embeddings, error: embError } = await supabase
      .from('spa_embeddings')
      .select('*')
    
    if (embError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ embeddings:', embError)
      return
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${embeddings.length} embeddings –≤ —Ç–∞–±–ª–∏—Ü–µ`)
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –ø–æ–∏—Å–∫ –±–µ–∑ —Ñ—É–Ω–∫—Ü–∏–∏
    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –ø–æ–∏—Å–∫:')
    const { data: directSearch, error: directError } = await supabase
      .from('spa_embeddings')
      .select('spa_id, content')
      .limit(1)
    
    if (directError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –ø–æ–∏—Å–∫–∞:', directError)
      return
    }
    
    console.log(`‚úÖ –ü—Ä—è–º–æ–π –ø–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç: ${directSearch.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞ –Ω–∞–ø—Ä—è–º—É—é
    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é search_spas:')
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –≤–µ–∫—Ç–æ—Ä
    const testVector = Array(1536).fill(0.1)
    
    const { data: functionSearch, error: functionError } = await supabase.rpc('search_spas', {
      query_embedding: testVector,
      match_threshold: 0.1,
      match_count: 5
    })
    
    if (functionError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ search_spas:', functionError)
      return
    }
    
    console.log(`‚úÖ –§—É–Ω–∫—Ü–∏—è search_spas —Ä–∞–±–æ—Ç–∞–µ—Ç: ${functionSearch.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`)
    
    if (functionSearch.length > 0) {
      console.log('üéØ –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤ –ø–æ—Ä–æ–≥–µ —Å—Ö–æ–∂–µ—Å—Ç–∏.')
      functionSearch.forEach((result, index) => {
        console.log(`  ${index + 1}. –°–ü–ê ID: ${result.spa_id}`)
        console.log(`     –°—Ö–æ–∂–µ—Å—Ç—å: ${result.similarity.toFixed(3)}`)
      })
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  }
}

fixRLS()
