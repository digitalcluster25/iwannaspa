import pg from 'pg';
import { readFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const connectionString = 'postgresql://postgres:piAlmgrclkSirLRLJfGwJizmKrIpKaXs@switchback.proxy.rlwy.net:44855/railway';

console.log('üîç –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Railway PostgreSQL...');

const client = new pg.Client({
  connectionString,
  ssl: false // Railway –Ω–µ —Ç—Ä–µ–±—É–µ—Ç SSL –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
});

try {
  await client.connect();
  console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Railway PostgreSQL');

  // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª
  const schemaSQL = readFileSync(join(__dirname, 'railway-schema.sql'), 'utf-8');
  
  console.log('üìù –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏...');
  
  await client.query(schemaSQL);
  
  console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
  const result = await client.query(`
    SELECT table_name 
    FROM information_schema.tables 
    WHERE table_schema = 'public' 
    ORDER BY table_name;
  `);
  
  console.log('\nüìä –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:');
  result.rows.forEach(row => {
    console.log(`  ‚úì ${row.table_name}`);
  });
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error.message);
  process.exit(1);
} finally {
  await client.end();
  console.log('\nüîå –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç –ë–î');
}
