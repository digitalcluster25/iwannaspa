import { createClient } from '@supabase/supabase-js'

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY
const supabaseServiceKey = import.meta.env.VITE_SUPABASE_SERVICE_KEY

console.log('üîç Supabase config:', {
  url: supabaseUrl ? supabaseUrl.substring(0, 30) + '...' : 'MISSING',
  key: supabaseAnonKey ? supabaseAnonKey.substring(0, 20) + '...' : 'MISSING',
})

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå Missing Supabase variables')
  throw new Error('Missing Supabase environment variables')
}

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
export const supabase = createClient(supabaseUrl, supabaseAnonKey)

// –ê–¥–º–∏–Ω—Å–∫–∏–π –∫–ª–∏–µ–Ω—Ç —Å service role –¥–ª—è –æ–±—Ö–æ–¥–∞ RLS (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π!)
export const supabaseAdmin = supabaseServiceKey 
  ? createClient(supabaseUrl, supabaseServiceKey, {
      auth: {
        autoRefreshToken: false,
        persistSession: false
      }
    })
  : supabase // Fallback –Ω–∞ –æ–±—ã—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –µ—Å–ª–∏ –Ω–µ—Ç service key
